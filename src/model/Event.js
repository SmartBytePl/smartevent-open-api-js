/**
 * Smart Event Open API
 * Smart Event Open API documentation
 *
 * OpenAPI spec version: 2.0.12
 * Contact: info@smartevent.pl
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Category from './Category';
import Image from './Image';
import Ticket from './Ticket';
import TranslationEvent from './TranslationEvent';

/**
* The Event model module.
* @module model/Event
* @version 2.0.12
*/
export default class Event {
    /**
    * Constructs a new <code>Event</code>.
    * Event with its basic information
    * @alias module:model/Event
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Event</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Event} obj Optional instance to populate.
    * @return {module:model/Event} The populated <code>Event</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Event();
                        
            
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('salable')) {
                obj['salable'] = ApiClient.convertToType(data['salable'], 'Boolean');
            }
            if (data.hasOwnProperty('visible')) {
                obj['visible'] = ApiClient.convertToType(data['visible'], 'Boolean');
            }
            if (data.hasOwnProperty('finished')) {
                obj['finished'] = ApiClient.convertToType(data['finished'], 'Boolean');
            }
            if (data.hasOwnProperty('days_count')) {
                obj['days_count'] = ApiClient.convertToType(data['days_count'], 'Number');
            }
            if (data.hasOwnProperty('available_from')) {
                obj['available_from'] = ApiClient.convertToType(data['available_from'], 'Date');
            }
            if (data.hasOwnProperty('available_until')) {
                obj['available_until'] = ApiClient.convertToType(data['available_until'], 'Date');
            }
            if (data.hasOwnProperty('begin_date')) {
                obj['begin_date'] = ApiClient.convertToType(data['begin_date'], 'Date');
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
            }
            if (data.hasOwnProperty('visible_from')) {
                obj['visible_from'] = ApiClient.convertToType(data['visible_from'], 'Date');
            }
            if (data.hasOwnProperty('visible_until')) {
                obj['visible_until'] = ApiClient.convertToType(data['visible_until'], 'Date');
            }
            if (data.hasOwnProperty('translations')) {
                obj['translations'] = ApiClient.convertToType(data['translations'], {'String': TranslationEvent});
            }
            if (data.hasOwnProperty('tickets')) {
                obj['tickets'] = ApiClient.convertToType(data['tickets'], [Ticket]);
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], [Image]);
            }
            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], [Category]);
            }
        }
        return obj;
    }

    /**
    * @member {Number} id
    */
    id = undefined;
    /**
    * @member {String} city
    */
    city = undefined;
    /**
    * @member {String} address
    */
    address = undefined;
    /**
    * @member {Boolean} salable
    */
    salable = undefined;
    /**
    * @member {Boolean} visible
    */
    visible = undefined;
    /**
    * @member {Boolean} finished
    */
    finished = undefined;
    /**
    * @member {Number} days_count
    */
    days_count = undefined;
    /**
    * @member {Date} available_from
    */
    available_from = undefined;
    /**
    * @member {Date} available_until
    */
    available_until = undefined;
    /**
    * @member {Date} begin_date
    */
    begin_date = undefined;
    /**
    * @member {Date} end_date
    */
    end_date = undefined;
    /**
    * @member {Date} visible_from
    */
    visible_from = undefined;
    /**
    * @member {Date} visible_until
    */
    visible_until = undefined;
    /**
    * Keys reference to locale of a translation
    * @member {Object.<String, module:model/TranslationEvent>} translations
    */
    translations = undefined;
    /**
    * @member {Array.<module:model/Ticket>} tickets
    */
    tickets = undefined;
    /**
    * @member {Array.<module:model/Image>} images
    */
    images = undefined;
    /**
    * @member {Array.<module:model/Category>} categories
    */
    categories = undefined;




}
